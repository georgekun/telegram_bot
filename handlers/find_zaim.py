from aiogram import types
from aiogram.dispatcher.filters import Text

import tg_analytic
from config import dp
from keyboards.client import *


@dp.message_handler(Text("üîç–ü–æ–¥–±–æ—Ä –∑–∞–π–º–∞"))
async def loan_selection(message: types.Message):
    tg_analytic.statistics(message.chat.id, message.text)
    country = await base.get_user_country(message.from_user.id)

    if country == "–†–æ—Å—Å–∏—è":
        markup = russia_sum_choose_kb

    await message.answer("–í—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å <b>–ú–∞—Å—Ç–µ—Ä–æ–º –ø–æ–¥–±–æ—Ä–∞ –∑–∞–π–º–æ–≤</b>\n\n<b>–í—ã–±–µ—Ä–∏—Ç–µ –°–£–ú–ú–£ –∑–∞–π–º–∞</b>", reply_markup=markup)

@dp.callback_query_handler(Text("russia_date_choose"))
async def russia_date_choose(call: types.CallbackQuery):
    await call.message.answer("<b>–í—ã–±–µ—Ä–∏ –°–†–û–ö –∑–∞–π–º–∞</b>", reply_markup=russia_date_choose_kb)
    await call.answer()

@dp.callback_query_handler(Text("russia_procent_choose"))
async def russia_date_choose(call: types.CallbackQuery):
    await call.message.answer("<b>–í—ã–±–µ—Ä–∏ –ü–†–û–¶–ï–ù–¢ –∑–∞–π–º–∞</b>", reply_markup=russia_procent_choose_kb)
    await call.answer()

@dp.callback_query_handler(Text(startswith="russia_"))
async def russia_payment_choose(call: types.CallbackQuery):
    procent = call.data.split("_")[1]
    await call.message.answer("<b>–í—ã–±–µ—Ä–∏ –°–ü–û–°–û–ë –ü–û–õ–£–ß–ï–ù–ò–Ø –∑–∞–π–º–∞</b>", reply_markup=await get_russia_way_choose_kb(procent))
    await call.answer()


@dp.callback_query_handler(Text(startswith="services_russia_"))
async def get_popular_by_param(call: types.CallbackQuery):
    try:
        param = call.data.split("_")[3]
        procent = call.data.split("_")[2]
        country = await base.get_user_country(call.from_user.id)
        start_service_info = (await base.get_popular_services_by_param(param, country))[0]
        if country == "–†–æ—Å—Å–∏—è":
            valute = "—Ä—É–±."
        elif country == "–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω":
            valute = "—Ç–µ–Ω–≥–µ"
        elif country == "–£–∫—Ä–∞–∏–Ω–∞":
            valute = "–≥—Ä."
        free_procent_if = "" if start_service_info[7] is None else start_service_info[7]
        msg = (f"<b>–ó–∞–π–º:</b> –æ—Ç {start_service_info[2]} –¥–æ {start_service_info[3]} {valute}\n"
               f"<b>–°—Ä–æ–∫:</b>  –æ—Ç {start_service_info[4]} –¥–æ {start_service_info[5]} –¥–Ω–µ–π\n"
               f"<b>–ü—Ä–æ—Ü–µ–Ω—Ç:</b> {start_service_info[6]}%\n")
        if bool(len(free_procent_if)):
            msg += (f"\n<b>–£—Å–ª–æ–≤–∏—è –∑–∞–π–º–∞ –ø–æ–¥ 0%</b>\n"
                    f"{free_procent_if}")
        await call.message.answer_photo(photo=start_service_info[8],
                                        caption=msg, reply_markup=await get_popular_service_kb(start_service_info[-1], param, country))
    except IndexError:
        await call.message.answer("–ü–æ–∫–∞ —á—Ç–æ –≤ –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ—Ç –∑–∞–π–º–æ–≤!")
